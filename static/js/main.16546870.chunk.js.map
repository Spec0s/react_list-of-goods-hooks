{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","sortListOnClick","type","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","Error","reverse","getReorderedGoods","isResetVisible","className","cn","onClick","current","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAU,WACrB,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAkB,SAACC,GACvBF,EAAYE,IAYRC,EA9CD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAY,YAAOC,GAEzB,OAAQL,GACN,KAAKP,EAASa,SACZF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKhB,EAASkB,OACZP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UACzC,MAEF,KAAKnB,EAASM,KACZ,MAEF,QACE,MAAM,IAAIc,MAAJ,4BAA+Bb,IAOzC,OAJIH,GACFO,EAAaU,UAGRV,EAoBcW,CACnBrB,EACA,CAAEG,aAAYG,aAGVgB,EAAiBhB,IAAaP,EAASM,MAAQF,EAErD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEd,KAAK,SACLc,UAAWC,IACT,SACA,UACA,CACE,WAAYlB,IAAaP,EAASa,WAGtCa,QAAS,kBAAMjB,EAAgBT,EAASa,WAT1C,iCAcA,wBACEH,KAAK,SACLc,UAAWC,IACT,SACA,aACA,CACE,WAAYlB,IAAaP,EAASkB,SAGtCQ,QAAS,kBAAMjB,EAAgBT,EAASkB,SAT1C,4BAcA,wBACER,KAAK,SACLc,UAAWC,IACT,SACA,aACA,CACE,YAAarB,IAGjBsB,QAxDmB,WACzBrB,GAAc,SAACsB,GAAD,OAAcA,MA8CxB,qBAcCJ,GACC,wBACEb,KAAK,SACLc,UAAU,4BACVE,QA7De,WACvBrB,GAAc,GACdG,EAAYR,EAASM,OAwDf,sBAUJ,6BACGK,EAAaiB,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCzInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16546870.chunk.js","sourcesContent":["import { FC, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      throw new Error(`Invalid sortType: ${sortType}`);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const sortListOnClick = (type: SortType) => {\n    setSortType(type);\n  };\n\n  const handleClickReverse = () => {\n    setIsReversed((current) => !current);\n  };\n\n  const handleClickReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { isReversed, sortType },\n  );\n\n  const isResetVisible = sortType !== SortType.NONE || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => sortListOnClick(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => sortListOnClick(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={handleClickReverse}\n        >\n          Reverse\n        </button>\n\n        {isResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleClickReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}